"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[884],{27231:e=>{e.exports=JSON.parse('{"functions":[{"name":"isConnected","desc":"Checks if two nodes share a connection","params":[{"name":"node","desc":"","lua_type":"Node"},{"name":"other","desc":"","lua_type":"Node"}],"returns":[{"desc":"","lua_type":"boolean\\r\\n"}],"function_type":"static","source":{"line":205,"path":"src/init.lua"}},{"name":"disconnect","desc":"Removes the connection from both nodes","params":[{"name":"node","desc":"","lua_type":"Node"},{"name":"other","desc":"","lua_type":"Node"}],"returns":[{"desc":"","lua_type":"nil\\r\\n"}],"function_type":"static","source":{"line":211,"path":"src/init.lua"}},{"name":"setConnectionTag","desc":"Sets the tag of a connection","params":[{"name":"node","desc":"","lua_type":"Node"},{"name":"other","desc":"","lua_type":"Node"},{"name":"tag","desc":"","lua_type":"string"}],"returns":[],"function_type":"static","source":{"line":223,"path":"src/init.lua"}},{"name":"getConnectionTags","desc":"Gets the tags of a connection","params":[{"name":"node","desc":"","lua_type":"Node"},{"name":"other","desc":"","lua_type":"Node"}],"returns":[{"desc":"","lua_type":"{[number]: string}\\r\\n"}],"function_type":"static","source":{"line":230,"path":"src/init.lua"}},{"name":"getIfConnectionHasTag","desc":"Gets if a connection has a tag","params":[{"name":"node","desc":"","lua_type":"Node"},{"name":"other","desc":"","lua_type":"Node"},{"name":"tag","desc":"","lua_type":"string"}],"returns":[{"desc":"","lua_type":"boolean\\r\\n"}],"function_type":"static","source":{"line":237,"path":"src/init.lua"}},{"name":"removeConnectionTag","desc":"Gets if a connection has a tag","params":[{"name":"node","desc":"","lua_type":"Node"},{"name":"other","desc":"","lua_type":"Node"},{"name":"tag","desc":"","lua_type":"string"}],"returns":[{"desc":"","lua_type":"nil\\r\\n"}],"function_type":"static","source":{"line":244,"path":"src/init.lua"}},{"name":"connect","desc":"Creates a connection between two nodes.","params":[{"name":"node","desc":"","lua_type":"Node"},{"name":"other","desc":"","lua_type":"Node"},{"name":"tagOrTagList","desc":"","lua_type":"({[number]: string} | string)?"},{"name":"position","desc":"","lua_type":"Vector3?"}],"returns":[{"desc":"","lua_type":"nil\\r\\n"}],"function_type":"static","source":{"line":252,"path":"src/init.lua"}},{"name":"setConnectionPosition","desc":"Sets the position of a connection between two nodes. Will error if no connection exists. Can be used to erase position if nil is passed as position parameter.","params":[{"name":"node","desc":"","lua_type":"Node"},{"name":"other","desc":"","lua_type":"Node"},{"name":"position","desc":"","lua_type":"Vector3?"}],"returns":[{"desc":"","lua_type":"nil\\r\\n"}],"function_type":"static","source":{"line":279,"path":"src/init.lua"}},{"name":"getConnectionPosition","desc":"Gets the position of a connection between two nodes. Will error if no connection exists. Will return nil if position was never set.","params":[{"name":"node","desc":"","lua_type":"Node"},{"name":"other","desc":"","lua_type":"Node"}],"returns":[{"desc":"","lua_type":"Vector3?\\r\\n"}],"function_type":"static","source":{"line":291,"path":"src/init.lua"}},{"name":"getConnectedNodes","desc":"Returns a list of all nodes that are connected","params":[{"name":"node","desc":"","lua_type":"Node"}],"returns":[{"desc":"","lua_type":"{[number]: Node}\\r\\n"}],"function_type":"static","source":{"line":302,"path":"src/init.lua"}},{"name":"getConnectedNodesOfTag","desc":"Returns a list of all nodes that match the tag","params":[{"name":"node","desc":"","lua_type":"Node"},{"name":"tag","desc":"","lua_type":"string"}],"returns":[{"desc":"","lua_type":"{[number]: Node}\\r\\n"}],"function_type":"static","source":{"line":316,"path":"src/init.lua"}},{"name":"setInputValue","desc":"Set non-solved properties properties manually","params":[{"name":"node","desc":"","lua_type":"Node"},{"name":"key","desc":"","lua_type":"string"},{"name":"val","desc":"","lua_type":"any?"}],"returns":[{"desc":"","lua_type":"nil\\r\\n"}],"function_type":"static","source":{"line":327,"path":"src/init.lua"}},{"name":"setOutputSolver","desc":"Get the value of non-solver properties\\nSet a module to be used for future solving of the value","params":[{"name":"node","desc":"","lua_type":"Node"},{"name":"key","desc":"","lua_type":"string"},{"name":"solver","desc":"","lua_type":"ModuleScript"}],"returns":[{"desc":"","lua_type":"nil\\r\\n"}],"function_type":"static","source":{"line":341,"path":"src/init.lua"}},{"name":"setNodePosition","desc":"Sets the position of a node","params":[{"name":"node","desc":"","lua_type":"Node"},{"name":"position","desc":"","lua_type":"Vector3"}],"returns":[{"desc":"","lua_type":"nil\\r\\n"}],"function_type":"static","source":{"line":354,"path":"src/init.lua"}},{"name":"getNodePosition","desc":"Gets the position of a node","params":[{"name":"node","desc":"","lua_type":"Node"}],"returns":[{"desc":"","lua_type":"Vector3\\r\\n"}],"function_type":"static","source":{"line":360,"path":"src/init.lua"}},{"name":"new","desc":"Constructs a new node at the specified position. ","params":[{"name":"position","desc":"","lua_type":"Vector3"}],"returns":[{"desc":"","lua_type":"Node\\r\\n"}],"function_type":"static","source":{"line":379,"path":"src/init.lua"}}],"properties":[{"name":"BackendTagPrefix","desc":"to avoid overlapping with front-end tags, all tags are appended on the backend with a tag prefix","lua_type":"string","source":{"line":21,"path":"src/init.lua"}}],"types":[{"name":"Node","desc":"A model that can be run through the NodeUtil functions","lua_type":"Model","source":{"line":27,"path":"src/init.lua"}}],"name":"NodeUtil","desc":"A long list of useful node related functions.","source":{"line":11,"path":"src/init.lua"}}')}}]);